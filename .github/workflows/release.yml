name: Build and release
on:
  push:
    branches:
      - master

jobs:
  release:
    name: Release next version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.OBLAK_BOT_TOKEN }}
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Check for .nvmrc
        id: nvmrc
        uses: andstor/file-existence-action@v2
        with:
          files: ".nvmrc"
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn
        if: steps.nvmrc.outputs.files_exists == 'true'
      - name: Setup Node.js (default)
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
        if: steps.nvmrc.outputs.files_exists == 'false'
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            /tmp/composer-cache
            dist
          key: cache-${{ hashFiles('**/composer.lock') }}-${{ hashFiles('assets/**/*') }}
          restore-keys: |
            cache-${{ hashFiles('**/composer.lock') }}-
      - name: Install Composer dependencies
        uses: php-actions/composer@v6
        with:
          php_version: "7.4"
          dev: no
          quiet: yes
          args: --optimize-autoloader --classmap-authoritative --prefer-dist
      - name: Install NPM deps
        run: npm ci
      - name: Release
        env:
          GIT_AUTHOR_NAME: "oblakbot"
          GIT_AUTHOR_EMAIL: "sibin.grasic+bot@oblak.studio"
          GIT_COMMITTER_NAME: "oblakbot"
          GIT_COMMITTER_EMAIL: "sibin.grasic+bot@oblak.studio"
          GITHUB_TOKEN: ${{ secrets.OBLAK_BOT_TOKEN }}
        run: npm run semantic-release
      - name: Setup deploy variables
        id: wpvar
        shell: bash
        run: |
          sh .github/scripts/set-version.sh
          cp .wordpress-org/readme.txt ./readme.txt > /dev/null
      - name: WordPress Plugin Deploy
        id: deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        env:
          SVN_USERNAME: ${{ secrets.WP_ORG_SVN_USER }}
          SVN_PASSWORD: ${{ secrets.WP_ORG_SVN_PASS }}
          ASSETS_DIR: ".wordpress-org/assets"
          SLUG: "srbtranslatin"
          VERSION: ${{ steps.wpvar.outputs.version }}
        with:
          generate-zip: false
